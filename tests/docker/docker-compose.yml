version: "3.9"


services:

  server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
    entrypoint: ["certdeploy-server", "--lineage", "/etc/letsencrypt/live/example.com", "--domains", "example.com"]
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_basic.yml

  certbot_passthrough_server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
    entrypoint: ["/entrypoint.sh", "--help"]
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_basic.yml

  daemon_mock_certbot_server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
      - "./mock/mock-certbot.sh:/bin/mock-certbot"
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_daemon_mock_certbot.yml

  renew_mock_certbot_server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
      - "./mock/mock-certbot.sh:/bin/mock-certbot"
    environment:
      CERTDEPLOY_RENEW_ONLY: "true"
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_renew_mock_certbot.yml

  fail_fast_server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
    entrypoint: ["certdeploy-server", "--config", "/etc/certdeploy/server_fail_fast.yml", "--lineage", "/etc/letsencrypt/live/example.com", "--domains", "example.com"]
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_fail_fast.yml

  fail_fast_runner_server:
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
    entrypoint: ["certdeploy-server", "--lineage", "/etc/letsencrypt/live/example.com", "--domains", "example.com"]
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_fail_fast_runner.yml

  fail_fast_daemon_mock_certbot_server:
    # This causes a failure in a way that requires both the daemon code and
    #   renew code to fail fast
    image: certdeploy-server:latest
    volumes:
      - "./server/:/etc/certdeploy"
      - "./server/etc-letsencrypt:/etc/letsencrypt"
    environment:
      CERTDEPLOY_SERVER_CONFIG: /etc/certdeploy/server_fail_fast_daemon_mock_certbot.yml

  noop_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_noop_client
    volumes:
      - "./client:/etc/certdeploy:ro"
      - "./output/client_noop_certs:/certdeploy/certs"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_noop.yml

  docker_container_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_docker_contianer_client
    volumes:
      # Expose the docker socket in the container to manage containers and services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./client:/etc/certdeploy:ro"
      - "./output/client_docker_container_certs:/certdeploy/certs"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_docker_container.yml

  docker_service_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_docker_service_client
    volumes:
      # Expose the docker socket in the container to manage containers and services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./client:/etc/certdeploy:ro"
      - "./output/client_docker_service_certs:/certdeploy/certs"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_docker_service.yml

  script_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_script_client
    volumes:
      - "./client:/etc/certdeploy:ro"
      - "./output/client_script_certs:/certdeploy/certs"
      # Mock stuff
      - "./mock/scripts:/scripts"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_script.yml

  systemd_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_systemd_client
    volumes:
      - "./client:/etc/certdeploy:ro"
      - "./output/client_systemd_certs:/certdeploy/certs"
      # Mock stuff
      - "./mock/mock-systemctl.sh:/bin/systemctl"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_systemd.yml

  everything_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_everything_client
    volumes:
      # Expose the docker socket in the container to manage containers and services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./client:/etc/certdeploy:ro"
      - "./output/client_everything_certs:/certdeploy/certs"
      # Mock stuff
      - "./mock/scripts:/scripts"
      - "./mock/mock-systemctl.sh:/bin/systemctl"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/client_everything.yml

  fail_fast_docker_container_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_fail_fast_docker_contianer_client
    volumes:
      # Expose the docker socket in the container to manage containers and services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./client:/etc/certdeploy:ro"
      - "./output/client_fail_fast_docker_container_certs:/certdeploy/certs"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/fail_fast/client_docker_container.yml

  fail_fast_docker_service_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_fail_fast_docker_service_client
    volumes:
      # Expose the docker socket in the container to manage containers and services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./client:/etc/certdeploy:ro"
      - "./output/client_fail_fast_docker_service_certs:/certdeploy/certs"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/fail_fast/client_docker_service.yml

  fail_fast_script_non_zero_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_fail_fast_script_non_zero_client
    volumes:
      - "./client:/etc/certdeploy:ro"
      - "./output/client_fail_fast_script_non_zero_certs:/certdeploy/certs"
      # Mock stuff
      - "./mock/scripts:/scripts"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/fail_fast/client_script_non_zero.yml

  fail_fast_systemd_client:
    image: certdeploy-client:latest
    container_name: certdeploy_test_fail_fast_systemd_client
    volumes:
      - "./client:/etc/certdeploy:ro"
      - "./output/client_fail_fast_systemd_certs:/certdeploy/certs"
      # Mock stuff
      - "./mock/mock-systemctl.sh:/bin/systemctl"
    environment:
      CERTDEPLOY_CLIENT_CONFIG: /etc/certdeploy/fail_fast/client_systemd.yml

  # Just an example container to automatically restart
  hello:
    image: alpine:latest
    container_name: hello
    entrypoint: ["/bin/sh", "-c", "while true; do sleep 600; done"]
